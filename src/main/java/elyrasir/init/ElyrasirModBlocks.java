
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package elyrasir.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.world.level.block.Block;

import elyrasir.block.YellowconcretetilesslabBlock;
import elyrasir.block.YellowconcretetilesBlock;
import elyrasir.block.YellowconcretepillarBlock;
import elyrasir.block.YellowconcretebrickstairsBlock;
import elyrasir.block.YellowconcretebrickslabBlock;
import elyrasir.block.YellowconcretebricksBlock;
import elyrasir.block.YellowconcretebigsquareBlock;
import elyrasir.block.YellowchisledskeletonconcreteBlock;
import elyrasir.block.YellowchisledcreeperconcreteBlock;
import elyrasir.block.WhiteconcretetilesslabBlock;
import elyrasir.block.WhiteconcretetilesBlock;
import elyrasir.block.WhiteconcretepillarBlock;
import elyrasir.block.WhiteconcretebrickstairsBlock;
import elyrasir.block.WhiteconcretebrickslabBlock;
import elyrasir.block.WhiteconcretebricksBlock;
import elyrasir.block.WhiteconcretebigsquareBlock;
import elyrasir.block.WhitechisledskeletonconcreteBlock;
import elyrasir.block.WhitechisledcreeperconcreteBlock;
import elyrasir.block.VendeurBlock;
import elyrasir.block.RedconcretetilesslabBlock;
import elyrasir.block.RedconcretetilesBlock;
import elyrasir.block.RedconcretepillarBlock;
import elyrasir.block.RedconcretebrickstairsBlock;
import elyrasir.block.RedconcretebrickslabBlock;
import elyrasir.block.RedconcretebricksBlock;
import elyrasir.block.RedconcretebigsquareBlock;
import elyrasir.block.RedchisledskeletonconcreteBlock;
import elyrasir.block.RedchisledcreeperconcreteBlock;
import elyrasir.block.PurpleconcretetilesslabBlock;
import elyrasir.block.PurpleconcretepillarBlock;
import elyrasir.block.PurpleconcretebrickstairsBlock;
import elyrasir.block.PurpleconcretebrickslabBlock;
import elyrasir.block.PurpleconcretebricksBlock;
import elyrasir.block.PurpleconcretebigsquareBlock;
import elyrasir.block.PurplechisledskeletonconcreteBlock;
import elyrasir.block.PurplechisledcreeperconcreteBlock;
import elyrasir.block.PurlpleconcretetilesBlock;
import elyrasir.block.PinkconcretetilesslabBlock;
import elyrasir.block.PinkconcretetilesBlock;
import elyrasir.block.PinkconcretepillarBlock;
import elyrasir.block.PinkconcretebrickstairsBlock;
import elyrasir.block.PinkconcretebrickslabBlock;
import elyrasir.block.PinkconcretebricksBlock;
import elyrasir.block.PinkconcretebigsquareBlock;
import elyrasir.block.PinkchisledskeletonconcreteBlock;
import elyrasir.block.PinkchisledcreeperconcreteBlock;
import elyrasir.block.OrdinateurPoliceBlock;
import elyrasir.block.OrangeconcretetilesslabBlock;
import elyrasir.block.OrangeconcretetilesBlock;
import elyrasir.block.OrangeconcretepillarBlock;
import elyrasir.block.OrangeconcretebrickstairsBlock;
import elyrasir.block.OrangeconcretebrickslabBlock;
import elyrasir.block.OrangeconcretebricksBlock;
import elyrasir.block.OrangeconcretebigsquareBlock;
import elyrasir.block.OrangechisledskeletonconcreteBlock;
import elyrasir.block.OrangechisledcreeperconcreteBlock;
import elyrasir.block.MagentaconcretetilesslabBlock;
import elyrasir.block.MagentaconcretetilesBlock;
import elyrasir.block.MagentaconcretepillarBlock;
import elyrasir.block.MagentaconcretebrickstairsBlock;
import elyrasir.block.MagentaconcretebrickslabBlock;
import elyrasir.block.MagentaconcretebricksBlock;
import elyrasir.block.MagentaconcretebigsquareBlock;
import elyrasir.block.MagentachisledskeletonconcreteBlock;
import elyrasir.block.MagentachisledcreeperconcreteBlock;
import elyrasir.block.LimeconcretetilesslabBlock;
import elyrasir.block.LimeconcretetilesBlock;
import elyrasir.block.LimeconcretepillarBlock;
import elyrasir.block.LimeconcretebrickstairsBlock;
import elyrasir.block.LimeconcretebrickslabBlock;
import elyrasir.block.LimeconcretebricksBlock;
import elyrasir.block.LimeconcretebigsquareBlock;
import elyrasir.block.LimechisledskeletonconcreteBlock;
import elyrasir.block.LimechisledcreeperconcreteBlock;
import elyrasir.block.LightgrayconcretetilesslabBlock;
import elyrasir.block.LightgrayconcretetilesBlock;
import elyrasir.block.LightgrayconcretepillarBlock;
import elyrasir.block.LightgrayconcretebrickstairsBlock;
import elyrasir.block.LightgrayconcretebrickslabBlock;
import elyrasir.block.LightgrayconcretebricksBlock;
import elyrasir.block.LightgrayconcretebigsquareBlock;
import elyrasir.block.LightgraychisledskeletonconcreteBlock;
import elyrasir.block.LightgraychisledcreeperconcreteBlock;
import elyrasir.block.LightblueconcretetilesslabBlock;
import elyrasir.block.LightblueconcretetilesBlock;
import elyrasir.block.LightblueconcretepillarBlock;
import elyrasir.block.LightblueconcretebrickstairsBlock;
import elyrasir.block.LightblueconcretebrickslabBlock;
import elyrasir.block.LightblueconcretebricksBlock;
import elyrasir.block.LightblueconcretebigsquareBlock;
import elyrasir.block.LightbluechisledskeletonconcreteBlock;
import elyrasir.block.LightbluechisledcreeperconcreteBlock;
import elyrasir.block.GreenconcretetilesslabBlock;
import elyrasir.block.GreenconcretetilesBlock;
import elyrasir.block.GreenconcretepillarBlock;
import elyrasir.block.GreenconcretebrickstairsBlock;
import elyrasir.block.GreenconcretebrickslabBlock;
import elyrasir.block.GreenconcretebricksBlock;
import elyrasir.block.GreenconcretebigsquareBlock;
import elyrasir.block.GreenchisledskeletonconcreteBlock;
import elyrasir.block.GreenchisledcreeperconcreteBlock;
import elyrasir.block.GrayconcretetilesslabBlock;
import elyrasir.block.GrayconcretetilesBlock;
import elyrasir.block.GrayconcretepillarBlock;
import elyrasir.block.GrayconcretebrickstairsBlock;
import elyrasir.block.GrayconcretebrickslabBlock;
import elyrasir.block.GrayconcretebricksBlock;
import elyrasir.block.GrayconcretebigsquareBlock;
import elyrasir.block.GraychisledskeletonconcreteBlock;
import elyrasir.block.GraychisledcreeperconcreteBlock;
import elyrasir.block.CyanconcretetilesslabBlock;
import elyrasir.block.CyanconcretetilesBlock;
import elyrasir.block.CyanconcretepillarBlock;
import elyrasir.block.CyanconcretebrickstairsBlock;
import elyrasir.block.CyanconcretebrickslabBlock;
import elyrasir.block.CyanconcretebricksBlock;
import elyrasir.block.CyanconcretebigsquareBlock;
import elyrasir.block.CyanchisledskeletonconcreteBlock;
import elyrasir.block.CyanchisledcreeperconcreteBlock;
import elyrasir.block.BrownconcretetilesslabBlock;
import elyrasir.block.BrownconcretetilesBlock;
import elyrasir.block.BrownconcretepillarBlock;
import elyrasir.block.BrownconcretebrickstairsBlock;
import elyrasir.block.BrownconcretebrickslabBlock;
import elyrasir.block.BrownconcretebricksBlock;
import elyrasir.block.BrownconcretebigsquareBlock;
import elyrasir.block.BrownchisledskeletonconcreteBlock;
import elyrasir.block.BrownchisledcreeperconcreteBlock;
import elyrasir.block.BlueconcretetilesslabBlock;
import elyrasir.block.BlueconcretetilesBlock;
import elyrasir.block.BlueconcretepillarBlock;
import elyrasir.block.BlueconcretebrickstairsBlock;
import elyrasir.block.BlueconcretebrickslabBlock;
import elyrasir.block.BlueconcretebricksBlock;
import elyrasir.block.BlueconcretebigsquareBlock;
import elyrasir.block.BluechisledskeletonconcreteBlock;
import elyrasir.block.BluechisledcreeperconcreteBlock;
import elyrasir.block.BlackconcretetilesslabBlock;
import elyrasir.block.BlackconcretetilesBlock;
import elyrasir.block.BlackconcretepillarBlock;
import elyrasir.block.BlackconcretebrickstairsBlock;
import elyrasir.block.BlackconcretebrickslabBlock;
import elyrasir.block.BlackconcretebricksBlock;
import elyrasir.block.BlackconcretebigsquareBlock;
import elyrasir.block.BlackchisledskeletonconcreteBlock;
import elyrasir.block.BlackchisledcreeperconcreteBlock;
import elyrasir.block.ATMpAcountBlock;
import elyrasir.block.ATMCheckBlock;
import elyrasir.block.ATMBuyCarteBlock;
import elyrasir.block.ATMBuyBlock;
import elyrasir.block.ATMBlock;

import elyrasir.ElyrasirMod;

public class ElyrasirModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, ElyrasirMod.MODID);
	public static final RegistryObject<Block> WHITECONCRETEBRICKS = REGISTRY.register("whiteconcretebricks", () -> new WhiteconcretebricksBlock());
	public static final RegistryObject<Block> WHITECONCRETEBIGSQUARE = REGISTRY.register("whiteconcretebigsquare", () -> new WhiteconcretebigsquareBlock());
	public static final RegistryObject<Block> WHITECHISLEDCREEPERCONCRETE = REGISTRY.register("whitechisledcreeperconcrete", () -> new WhitechisledcreeperconcreteBlock());
	public static final RegistryObject<Block> WHITECHISLEDSKELETONCONCRETE = REGISTRY.register("whitechisledskeletonconcrete", () -> new WhitechisledskeletonconcreteBlock());
	public static final RegistryObject<Block> WHITECONCRETEPILLAR = REGISTRY.register("whiteconcretepillar", () -> new WhiteconcretepillarBlock());
	public static final RegistryObject<Block> WHITECONCRETETILES = REGISTRY.register("whiteconcretetiles", () -> new WhiteconcretetilesBlock());
	public static final RegistryObject<Block> ORANGECONCRETEBRICKS = REGISTRY.register("orangeconcretebricks", () -> new OrangeconcretebricksBlock());
	public static final RegistryObject<Block> ORANGECONCRETEBIGSQUARE = REGISTRY.register("orangeconcretebigsquare", () -> new OrangeconcretebigsquareBlock());
	public static final RegistryObject<Block> ORANGECHISLEDCREEPERCONCRETE = REGISTRY.register("orangechisledcreeperconcrete", () -> new OrangechisledcreeperconcreteBlock());
	public static final RegistryObject<Block> ORANGECHISLEDSKELETONCONCRETE = REGISTRY.register("orangechisledskeletonconcrete", () -> new OrangechisledskeletonconcreteBlock());
	public static final RegistryObject<Block> ORANGECONCRETEPILLAR = REGISTRY.register("orangeconcretepillar", () -> new OrangeconcretepillarBlock());
	public static final RegistryObject<Block> ORANGECONCRETETILES = REGISTRY.register("orangeconcretetiles", () -> new OrangeconcretetilesBlock());
	public static final RegistryObject<Block> MAGENTACONCRETEBRICKS = REGISTRY.register("magentaconcretebricks", () -> new MagentaconcretebricksBlock());
	public static final RegistryObject<Block> MAGENTACONCRETEBIGSQUARE = REGISTRY.register("magentaconcretebigsquare", () -> new MagentaconcretebigsquareBlock());
	public static final RegistryObject<Block> MAGENTACHISLEDCREEPERCONCRETE = REGISTRY.register("magentachisledcreeperconcrete", () -> new MagentachisledcreeperconcreteBlock());
	public static final RegistryObject<Block> MAGENTACHISLEDSKELETONCONCRETE = REGISTRY.register("magentachisledskeletonconcrete", () -> new MagentachisledskeletonconcreteBlock());
	public static final RegistryObject<Block> MAGENTACONCRETEPILLAR = REGISTRY.register("magentaconcretepillar", () -> new MagentaconcretepillarBlock());
	public static final RegistryObject<Block> MAGENTACONCRETETILES = REGISTRY.register("magentaconcretetiles", () -> new MagentaconcretetilesBlock());
	public static final RegistryObject<Block> LIGHTBLUECONCRETEBRICKS = REGISTRY.register("lightblueconcretebricks", () -> new LightblueconcretebricksBlock());
	public static final RegistryObject<Block> LIGHTBLUECONCRETEBIGSQUARE = REGISTRY.register("lightblueconcretebigsquare", () -> new LightblueconcretebigsquareBlock());
	public static final RegistryObject<Block> LIGHTBLUECHISLEDCREEPERCONCRETE = REGISTRY.register("lightbluechisledcreeperconcrete", () -> new LightbluechisledcreeperconcreteBlock());
	public static final RegistryObject<Block> LIGHTBLUECHISLEDSKELETONCONCRETE = REGISTRY.register("lightbluechisledskeletonconcrete", () -> new LightbluechisledskeletonconcreteBlock());
	public static final RegistryObject<Block> LIGHTBLUECONCRETEPILLAR = REGISTRY.register("lightblueconcretepillar", () -> new LightblueconcretepillarBlock());
	public static final RegistryObject<Block> LIGHTBLUECONCRETETILES = REGISTRY.register("lightblueconcretetiles", () -> new LightblueconcretetilesBlock());
	public static final RegistryObject<Block> YELLOWCONCRETEBRICKS = REGISTRY.register("yellowconcretebricks", () -> new YellowconcretebricksBlock());
	public static final RegistryObject<Block> YELLOWCONCRETEBIGSQUARE = REGISTRY.register("yellowconcretebigsquare", () -> new YellowconcretebigsquareBlock());
	public static final RegistryObject<Block> YELLOWCHISLEDCREEPERCONCRETE = REGISTRY.register("yellowchisledcreeperconcrete", () -> new YellowchisledcreeperconcreteBlock());
	public static final RegistryObject<Block> YELLOWCHISLEDSKELETONCONCRETE = REGISTRY.register("yellowchisledskeletonconcrete", () -> new YellowchisledskeletonconcreteBlock());
	public static final RegistryObject<Block> YELLOWCONCRETEPILLAR = REGISTRY.register("yellowconcretepillar", () -> new YellowconcretepillarBlock());
	public static final RegistryObject<Block> YELLOWCONCRETETILES = REGISTRY.register("yellowconcretetiles", () -> new YellowconcretetilesBlock());
	public static final RegistryObject<Block> LIMECONCRETEBRICKS = REGISTRY.register("limeconcretebricks", () -> new LimeconcretebricksBlock());
	public static final RegistryObject<Block> LIMECONCRETEBIGSQUARE = REGISTRY.register("limeconcretebigsquare", () -> new LimeconcretebigsquareBlock());
	public static final RegistryObject<Block> LIMECHISLEDCREEPERCONCRETE = REGISTRY.register("limechisledcreeperconcrete", () -> new LimechisledcreeperconcreteBlock());
	public static final RegistryObject<Block> LIMECHISLEDSKELETONCONCRETE = REGISTRY.register("limechisledskeletonconcrete", () -> new LimechisledskeletonconcreteBlock());
	public static final RegistryObject<Block> LIMECONCRETEPILLAR = REGISTRY.register("limeconcretepillar", () -> new LimeconcretepillarBlock());
	public static final RegistryObject<Block> LIMECONCRETETILES = REGISTRY.register("limeconcretetiles", () -> new LimeconcretetilesBlock());
	public static final RegistryObject<Block> PINKCONCRETEBRICKS = REGISTRY.register("pinkconcretebricks", () -> new PinkconcretebricksBlock());
	public static final RegistryObject<Block> PINKCONCRETEBIGSQUARE = REGISTRY.register("pinkconcretebigsquare", () -> new PinkconcretebigsquareBlock());
	public static final RegistryObject<Block> PINKCHISLEDCREEPERCONCRETE = REGISTRY.register("pinkchisledcreeperconcrete", () -> new PinkchisledcreeperconcreteBlock());
	public static final RegistryObject<Block> PINKCHISLEDSKELETONCONCRETE = REGISTRY.register("pinkchisledskeletonconcrete", () -> new PinkchisledskeletonconcreteBlock());
	public static final RegistryObject<Block> PINKCONCRETEPILLAR = REGISTRY.register("pinkconcretepillar", () -> new PinkconcretepillarBlock());
	public static final RegistryObject<Block> PINKCONCRETETILES = REGISTRY.register("pinkconcretetiles", () -> new PinkconcretetilesBlock());
	public static final RegistryObject<Block> GRAYCONCRETEBRICKS = REGISTRY.register("grayconcretebricks", () -> new GrayconcretebricksBlock());
	public static final RegistryObject<Block> GRAYCONCRETEBIGSQUARE = REGISTRY.register("grayconcretebigsquare", () -> new GrayconcretebigsquareBlock());
	public static final RegistryObject<Block> GRAYCHISLEDCREEPERCONCRETE = REGISTRY.register("graychisledcreeperconcrete", () -> new GraychisledcreeperconcreteBlock());
	public static final RegistryObject<Block> GRAYCHISLEDSKELETONCONCRETE = REGISTRY.register("graychisledskeletonconcrete", () -> new GraychisledskeletonconcreteBlock());
	public static final RegistryObject<Block> GRAYCONCRETEPILLAR = REGISTRY.register("grayconcretepillar", () -> new GrayconcretepillarBlock());
	public static final RegistryObject<Block> GRAYCONCRETETILES = REGISTRY.register("grayconcretetiles", () -> new GrayconcretetilesBlock());
	public static final RegistryObject<Block> LIGHTGRAYCONCRETEBRICKS = REGISTRY.register("lightgrayconcretebricks", () -> new LightgrayconcretebricksBlock());
	public static final RegistryObject<Block> LIGHTGRAYCONCRETEBIGSQUARE = REGISTRY.register("lightgrayconcretebigsquare", () -> new LightgrayconcretebigsquareBlock());
	public static final RegistryObject<Block> LIGHTGRAYCHISLEDCREEPERCONCRETE = REGISTRY.register("lightgraychisledcreeperconcrete", () -> new LightgraychisledcreeperconcreteBlock());
	public static final RegistryObject<Block> LIGHTGRAYCHISLEDSKELETONCONCRETE = REGISTRY.register("lightgraychisledskeletonconcrete", () -> new LightgraychisledskeletonconcreteBlock());
	public static final RegistryObject<Block> LIGHTGRAYCONCRETEPILLAR = REGISTRY.register("lightgrayconcretepillar", () -> new LightgrayconcretepillarBlock());
	public static final RegistryObject<Block> LIGHTGRAYCONCRETETILES = REGISTRY.register("lightgrayconcretetiles", () -> new LightgrayconcretetilesBlock());
	public static final RegistryObject<Block> CYANCONCRETEBRICKS = REGISTRY.register("cyanconcretebricks", () -> new CyanconcretebricksBlock());
	public static final RegistryObject<Block> CYANCONCRETEBIGSQUARE = REGISTRY.register("cyanconcretebigsquare", () -> new CyanconcretebigsquareBlock());
	public static final RegistryObject<Block> CYANCHISLEDCREEPERCONCRETE = REGISTRY.register("cyanchisledcreeperconcrete", () -> new CyanchisledcreeperconcreteBlock());
	public static final RegistryObject<Block> CYANCHISLEDSKELETONCONCRETE = REGISTRY.register("cyanchisledskeletonconcrete", () -> new CyanchisledskeletonconcreteBlock());
	public static final RegistryObject<Block> CYANCONCRETEPILLAR = REGISTRY.register("cyanconcretepillar", () -> new CyanconcretepillarBlock());
	public static final RegistryObject<Block> CYANCONCRETETILES = REGISTRY.register("cyanconcretetiles", () -> new CyanconcretetilesBlock());
	public static final RegistryObject<Block> PURPLECONCRETEBRICKS = REGISTRY.register("purpleconcretebricks", () -> new PurpleconcretebricksBlock());
	public static final RegistryObject<Block> PURPLECONCRETEBIGSQUARE = REGISTRY.register("purpleconcretebigsquare", () -> new PurpleconcretebigsquareBlock());
	public static final RegistryObject<Block> PURPLECHISLEDCREEPERCONCRETE = REGISTRY.register("purplechisledcreeperconcrete", () -> new PurplechisledcreeperconcreteBlock());
	public static final RegistryObject<Block> PURPLECHISLEDSKELETONCONCRETE = REGISTRY.register("purplechisledskeletonconcrete", () -> new PurplechisledskeletonconcreteBlock());
	public static final RegistryObject<Block> PURPLECONCRETEPILLAR = REGISTRY.register("purpleconcretepillar", () -> new PurpleconcretepillarBlock());
	public static final RegistryObject<Block> PURLPLECONCRETETILES = REGISTRY.register("purlpleconcretetiles", () -> new PurlpleconcretetilesBlock());
	public static final RegistryObject<Block> BLUECONCRETEBRICKS = REGISTRY.register("blueconcretebricks", () -> new BlueconcretebricksBlock());
	public static final RegistryObject<Block> BLUECONCRETEBIGSQUARE = REGISTRY.register("blueconcretebigsquare", () -> new BlueconcretebigsquareBlock());
	public static final RegistryObject<Block> BLUECHISLEDCREEPERCONCRETE = REGISTRY.register("bluechisledcreeperconcrete", () -> new BluechisledcreeperconcreteBlock());
	public static final RegistryObject<Block> BLUECHISLEDSKELETONCONCRETE = REGISTRY.register("bluechisledskeletonconcrete", () -> new BluechisledskeletonconcreteBlock());
	public static final RegistryObject<Block> BLUECONCRETEPILLAR = REGISTRY.register("blueconcretepillar", () -> new BlueconcretepillarBlock());
	public static final RegistryObject<Block> BLUECONCRETETILES = REGISTRY.register("blueconcretetiles", () -> new BlueconcretetilesBlock());
	public static final RegistryObject<Block> BROWNCONCRETEBRICKS = REGISTRY.register("brownconcretebricks", () -> new BrownconcretebricksBlock());
	public static final RegistryObject<Block> BROWNCONCRETEBIGSQUARE = REGISTRY.register("brownconcretebigsquare", () -> new BrownconcretebigsquareBlock());
	public static final RegistryObject<Block> BROWNCHISLEDCREEPERCONCRETE = REGISTRY.register("brownchisledcreeperconcrete", () -> new BrownchisledcreeperconcreteBlock());
	public static final RegistryObject<Block> BROWNCHISLEDSKELETONCONCRETE = REGISTRY.register("brownchisledskeletonconcrete", () -> new BrownchisledskeletonconcreteBlock());
	public static final RegistryObject<Block> BROWNCONCRETEPILLAR = REGISTRY.register("brownconcretepillar", () -> new BrownconcretepillarBlock());
	public static final RegistryObject<Block> BROWNCONCRETETILES = REGISTRY.register("brownconcretetiles", () -> new BrownconcretetilesBlock());
	public static final RegistryObject<Block> GREENCONCRETEBRICKS = REGISTRY.register("greenconcretebricks", () -> new GreenconcretebricksBlock());
	public static final RegistryObject<Block> GREENCONCRETEBIGSQUARE = REGISTRY.register("greenconcretebigsquare", () -> new GreenconcretebigsquareBlock());
	public static final RegistryObject<Block> GREENCHISLEDCREEPERCONCRETE = REGISTRY.register("greenchisledcreeperconcrete", () -> new GreenchisledcreeperconcreteBlock());
	public static final RegistryObject<Block> GREENCHISLEDSKELETONCONCRETE = REGISTRY.register("greenchisledskeletonconcrete", () -> new GreenchisledskeletonconcreteBlock());
	public static final RegistryObject<Block> GREENCONCRETEPILLAR = REGISTRY.register("greenconcretepillar", () -> new GreenconcretepillarBlock());
	public static final RegistryObject<Block> GREENCONCRETETILES = REGISTRY.register("greenconcretetiles", () -> new GreenconcretetilesBlock());
	public static final RegistryObject<Block> REDCONCRETEBRICKS = REGISTRY.register("redconcretebricks", () -> new RedconcretebricksBlock());
	public static final RegistryObject<Block> REDCONCRETEBIGSQUARE = REGISTRY.register("redconcretebigsquare", () -> new RedconcretebigsquareBlock());
	public static final RegistryObject<Block> REDCHISLEDCREEPERCONCRETE = REGISTRY.register("redchisledcreeperconcrete", () -> new RedchisledcreeperconcreteBlock());
	public static final RegistryObject<Block> REDCHISLEDSKELETONCONCRETE = REGISTRY.register("redchisledskeletonconcrete", () -> new RedchisledskeletonconcreteBlock());
	public static final RegistryObject<Block> REDCONCRETEPILLAR = REGISTRY.register("redconcretepillar", () -> new RedconcretepillarBlock());
	public static final RegistryObject<Block> REDCONCRETETILES = REGISTRY.register("redconcretetiles", () -> new RedconcretetilesBlock());
	public static final RegistryObject<Block> BLACKCONCRETEBRICKS = REGISTRY.register("blackconcretebricks", () -> new BlackconcretebricksBlock());
	public static final RegistryObject<Block> BLACKCONCRETEBIGSQUARE = REGISTRY.register("blackconcretebigsquare", () -> new BlackconcretebigsquareBlock());
	public static final RegistryObject<Block> BLACKCHISLEDCREEPERCONCRETE = REGISTRY.register("blackchisledcreeperconcrete", () -> new BlackchisledcreeperconcreteBlock());
	public static final RegistryObject<Block> BLACKCHISLEDSKELETONCONCRETE = REGISTRY.register("blackchisledskeletonconcrete", () -> new BlackchisledskeletonconcreteBlock());
	public static final RegistryObject<Block> BLACKCONCRETEPILLAR = REGISTRY.register("blackconcretepillar", () -> new BlackconcretepillarBlock());
	public static final RegistryObject<Block> BLACKCONCRETETILES = REGISTRY.register("blackconcretetiles", () -> new BlackconcretetilesBlock());
	public static final RegistryObject<Block> BLACKCONCRETEBRICKSLAB = REGISTRY.register("blackconcretebrickslab", () -> new BlackconcretebrickslabBlock());
	public static final RegistryObject<Block> BLUECONCRETEBRICKSLAB = REGISTRY.register("blueconcretebrickslab", () -> new BlueconcretebrickslabBlock());
	public static final RegistryObject<Block> BROWNCONCRETEBRICKSLAB = REGISTRY.register("brownconcretebrickslab", () -> new BrownconcretebrickslabBlock());
	public static final RegistryObject<Block> CYANCONCRETEBRICKSLAB = REGISTRY.register("cyanconcretebrickslab", () -> new CyanconcretebrickslabBlock());
	public static final RegistryObject<Block> GRAYCONCRETEBRICKSLAB = REGISTRY.register("grayconcretebrickslab", () -> new GrayconcretebrickslabBlock());
	public static final RegistryObject<Block> GREENCONCRETEBRICKSLAB = REGISTRY.register("greenconcretebrickslab", () -> new GreenconcretebrickslabBlock());
	public static final RegistryObject<Block> LIGHTBLUECONCRETEBRICKSLAB = REGISTRY.register("lightblueconcretebrickslab", () -> new LightblueconcretebrickslabBlock());
	public static final RegistryObject<Block> LIGHTGRAYCONCRETEBRICKSLAB = REGISTRY.register("lightgrayconcretebrickslab", () -> new LightgrayconcretebrickslabBlock());
	public static final RegistryObject<Block> LIMECONCRETEBRICKSLAB = REGISTRY.register("limeconcretebrickslab", () -> new LimeconcretebrickslabBlock());
	public static final RegistryObject<Block> MAGENTACONCRETEBRICKSLAB = REGISTRY.register("magentaconcretebrickslab", () -> new MagentaconcretebrickslabBlock());
	public static final RegistryObject<Block> ORANGECONCRETEBRICKSLAB = REGISTRY.register("orangeconcretebrickslab", () -> new OrangeconcretebrickslabBlock());
	public static final RegistryObject<Block> PINKCONCRETEBRICKSLAB = REGISTRY.register("pinkconcretebrickslab", () -> new PinkconcretebrickslabBlock());
	public static final RegistryObject<Block> PURPLECONCRETEBRICKSLAB = REGISTRY.register("purpleconcretebrickslab", () -> new PurpleconcretebrickslabBlock());
	public static final RegistryObject<Block> REDCONCRETEBRICKSLAB = REGISTRY.register("redconcretebrickslab", () -> new RedconcretebrickslabBlock());
	public static final RegistryObject<Block> WHITECONCRETEBRICKSLAB = REGISTRY.register("whiteconcretebrickslab", () -> new WhiteconcretebrickslabBlock());
	public static final RegistryObject<Block> YELLOWCONCRETEBRICKSLAB = REGISTRY.register("yellowconcretebrickslab", () -> new YellowconcretebrickslabBlock());
	public static final RegistryObject<Block> BLACKCONCRETEBRICKSTAIRS = REGISTRY.register("blackconcretebrickstairs", () -> new BlackconcretebrickstairsBlock());
	public static final RegistryObject<Block> BLUECONCRETEBRICKSTAIRS = REGISTRY.register("blueconcretebrickstairs", () -> new BlueconcretebrickstairsBlock());
	public static final RegistryObject<Block> BROWNCONCRETEBRICKSTAIRS = REGISTRY.register("brownconcretebrickstairs", () -> new BrownconcretebrickstairsBlock());
	public static final RegistryObject<Block> CYANCONCRETEBRICKSTAIRS = REGISTRY.register("cyanconcretebrickstairs", () -> new CyanconcretebrickstairsBlock());
	public static final RegistryObject<Block> GRAYCONCRETEBRICKSTAIRS = REGISTRY.register("grayconcretebrickstairs", () -> new GrayconcretebrickstairsBlock());
	public static final RegistryObject<Block> GREENCONCRETEBRICKSTAIRS = REGISTRY.register("greenconcretebrickstairs", () -> new GreenconcretebrickstairsBlock());
	public static final RegistryObject<Block> LIGHTBLUECONCRETEBRICKSTAIRS = REGISTRY.register("lightblueconcretebrickstairs", () -> new LightblueconcretebrickstairsBlock());
	public static final RegistryObject<Block> LIGHTGRAYCONCRETEBRICKSTAIRS = REGISTRY.register("lightgrayconcretebrickstairs", () -> new LightgrayconcretebrickstairsBlock());
	public static final RegistryObject<Block> LIMECONCRETEBRICKSTAIRS = REGISTRY.register("limeconcretebrickstairs", () -> new LimeconcretebrickstairsBlock());
	public static final RegistryObject<Block> MAGENTACONCRETEBRICKSTAIRS = REGISTRY.register("magentaconcretebrickstairs", () -> new MagentaconcretebrickstairsBlock());
	public static final RegistryObject<Block> ORANGECONCRETEBRICKSTAIRS = REGISTRY.register("orangeconcretebrickstairs", () -> new OrangeconcretebrickstairsBlock());
	public static final RegistryObject<Block> PINKCONCRETEBRICKSTAIRS = REGISTRY.register("pinkconcretebrickstairs", () -> new PinkconcretebrickstairsBlock());
	public static final RegistryObject<Block> PURPLECONCRETEBRICKSTAIRS = REGISTRY.register("purpleconcretebrickstairs", () -> new PurpleconcretebrickstairsBlock());
	public static final RegistryObject<Block> REDCONCRETEBRICKSTAIRS = REGISTRY.register("redconcretebrickstairs", () -> new RedconcretebrickstairsBlock());
	public static final RegistryObject<Block> WHITECONCRETEBRICKSTAIRS = REGISTRY.register("whiteconcretebrickstairs", () -> new WhiteconcretebrickstairsBlock());
	public static final RegistryObject<Block> YELLOWCONCRETEBRICKSTAIRS = REGISTRY.register("yellowconcretebrickstairs", () -> new YellowconcretebrickstairsBlock());
	public static final RegistryObject<Block> BLACKCONCRETETILESSLAB = REGISTRY.register("blackconcretetilesslab", () -> new BlackconcretetilesslabBlock());
	public static final RegistryObject<Block> BLUECONCRETETILESSLAB = REGISTRY.register("blueconcretetilesslab", () -> new BlueconcretetilesslabBlock());
	public static final RegistryObject<Block> BROWNCONCRETETILESSLAB = REGISTRY.register("brownconcretetilesslab", () -> new BrownconcretetilesslabBlock());
	public static final RegistryObject<Block> CYANCONCRETETILESSLAB = REGISTRY.register("cyanconcretetilesslab", () -> new CyanconcretetilesslabBlock());
	public static final RegistryObject<Block> GRAYCONCRETETILESSLAB = REGISTRY.register("grayconcretetilesslab", () -> new GrayconcretetilesslabBlock());
	public static final RegistryObject<Block> GREENCONCRETETILESSLAB = REGISTRY.register("greenconcretetilesslab", () -> new GreenconcretetilesslabBlock());
	public static final RegistryObject<Block> LIGHTBLUECONCRETETILESSLAB = REGISTRY.register("lightblueconcretetilesslab", () -> new LightblueconcretetilesslabBlock());
	public static final RegistryObject<Block> LIGHTGRAYCONCRETETILESSLAB = REGISTRY.register("lightgrayconcretetilesslab", () -> new LightgrayconcretetilesslabBlock());
	public static final RegistryObject<Block> LIMECONCRETETILESSLAB = REGISTRY.register("limeconcretetilesslab", () -> new LimeconcretetilesslabBlock());
	public static final RegistryObject<Block> MAGENTACONCRETETILESSLAB = REGISTRY.register("magentaconcretetilesslab", () -> new MagentaconcretetilesslabBlock());
	public static final RegistryObject<Block> ORANGECONCRETETILESSLAB = REGISTRY.register("orangeconcretetilesslab", () -> new OrangeconcretetilesslabBlock());
	public static final RegistryObject<Block> PINKCONCRETETILESSLAB = REGISTRY.register("pinkconcretetilesslab", () -> new PinkconcretetilesslabBlock());
	public static final RegistryObject<Block> PURPLECONCRETETILESSLAB = REGISTRY.register("purpleconcretetilesslab", () -> new PurpleconcretetilesslabBlock());
	public static final RegistryObject<Block> REDCONCRETETILESSLAB = REGISTRY.register("redconcretetilesslab", () -> new RedconcretetilesslabBlock());
	public static final RegistryObject<Block> WHITECONCRETETILESSLAB = REGISTRY.register("whiteconcretetilesslab", () -> new WhiteconcretetilesslabBlock());
	public static final RegistryObject<Block> YELLOWCONCRETETILESSLAB = REGISTRY.register("yellowconcretetilesslab", () -> new YellowconcretetilesslabBlock());
	public static final RegistryObject<Block> ATM = REGISTRY.register("atm", () -> new ATMBlock());
	public static final RegistryObject<Block> ORDINATEUR_POLICE = REGISTRY.register("ordinateur_police", () -> new OrdinateurPoliceBlock());
	public static final RegistryObject<Block> ATM_BUY = REGISTRY.register("atm_buy", () -> new ATMBuyBlock());
	public static final RegistryObject<Block> ATM_BUY_CARTE = REGISTRY.register("atm_buy_carte", () -> new ATMBuyCarteBlock());
	public static final RegistryObject<Block> ATM_CHECK = REGISTRY.register("atm_check", () -> new ATMCheckBlock());
	public static final RegistryObject<Block> AT_MP_ACOUNT = REGISTRY.register("at_mp_acount", () -> new ATMpAcountBlock());
	public static final RegistryObject<Block> VENDEUR = REGISTRY.register("vendeur", () -> new VendeurBlock());
}
